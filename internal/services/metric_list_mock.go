// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yandex-practicum-go-advanced-metrics/internal/services/metric_list.go

// Package services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yandex-practicum-go-advanced-metrics/internal/types"
)

// MockMetricListLister is a mock of MetricListLister interface.
type MockMetricListLister struct {
	ctrl     *gomock.Controller
	recorder *MockMetricListListerMockRecorder
}

// MockMetricListListerMockRecorder is the mock recorder for MockMetricListLister.
type MockMetricListListerMockRecorder struct {
	mock *MockMetricListLister
}

// NewMockMetricListLister creates a new mock instance.
func NewMockMetricListLister(ctrl *gomock.Controller) *MockMetricListLister {
	mock := &MockMetricListLister{ctrl: ctrl}
	mock.recorder = &MockMetricListListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricListLister) EXPECT() *MockMetricListListerMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockMetricListLister) List(ctx context.Context) ([]types.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]types.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockMetricListListerMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockMetricListLister)(nil).List), ctx)
}
