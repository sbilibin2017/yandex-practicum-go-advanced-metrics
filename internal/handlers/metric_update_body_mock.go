// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yandex-practicum-go-advanced-metrics/internal/handlers/metric_update_body.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yandex-practicum-go-advanced-metrics/internal/types"
)

// MockMetricBodyUpdater is a mock of MetricBodyUpdater interface.
type MockMetricBodyUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockMetricBodyUpdaterMockRecorder
}

// MockMetricBodyUpdaterMockRecorder is the mock recorder for MockMetricBodyUpdater.
type MockMetricBodyUpdaterMockRecorder struct {
	mock *MockMetricBodyUpdater
}

// NewMockMetricBodyUpdater creates a new mock instance.
func NewMockMetricBodyUpdater(ctrl *gomock.Controller) *MockMetricBodyUpdater {
	mock := &MockMetricBodyUpdater{ctrl: ctrl}
	mock.recorder = &MockMetricBodyUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricBodyUpdater) EXPECT() *MockMetricBodyUpdaterMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *MockMetricBodyUpdater) Update(ctx context.Context, metrics []types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockMetricBodyUpdaterMockRecorder) Update(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMetricBodyUpdater)(nil).Update), ctx, metrics)
}
