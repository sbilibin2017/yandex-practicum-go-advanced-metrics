// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yandex-practicum-go-advanced-metrics/internal/handlers/metric_update_path.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yandex-practicum-go-advanced-metrics/internal/types"
)

// MockMetricPathUpdater is a mock of MetricPathUpdater interface.
type MockMetricPathUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockMetricPathUpdaterMockRecorder
}

// MockMetricPathUpdaterMockRecorder is the mock recorder for MockMetricPathUpdater.
type MockMetricPathUpdaterMockRecorder struct {
	mock *MockMetricPathUpdater
}

// NewMockMetricPathUpdater creates a new mock instance.
func NewMockMetricPathUpdater(ctrl *gomock.Controller) *MockMetricPathUpdater {
	mock := &MockMetricPathUpdater{ctrl: ctrl}
	mock.recorder = &MockMetricPathUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricPathUpdater) EXPECT() *MockMetricPathUpdaterMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *MockMetricPathUpdater) Update(ctx context.Context, metrics []types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockMetricPathUpdaterMockRecorder) Update(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMetricPathUpdater)(nil).Update), ctx, metrics)
}
