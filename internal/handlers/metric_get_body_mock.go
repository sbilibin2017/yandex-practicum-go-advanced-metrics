// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/yandex-practicum-go-advanced-metrics/internal/handlers/metric_get_body.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/yandex-practicum-go-advanced-metrics/internal/types"
)

// MockMetricBodyGetter is a mock of MetricBodyGetter interface.
type MockMetricBodyGetter struct {
	ctrl     *gomock.Controller
	recorder *MockMetricBodyGetterMockRecorder
}

// MockMetricBodyGetterMockRecorder is the mock recorder for MockMetricBodyGetter.
type MockMetricBodyGetterMockRecorder struct {
	mock *MockMetricBodyGetter
}

// NewMockMetricBodyGetter creates a new mock instance.
func NewMockMetricBodyGetter(ctrl *gomock.Controller) *MockMetricBodyGetter {
	mock := &MockMetricBodyGetter{ctrl: ctrl}
	mock.recorder = &MockMetricBodyGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricBodyGetter) EXPECT() *MockMetricBodyGetterMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockMetricBodyGetter) Get(ctx context.Context, id types.MetricID) (*types.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*types.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMetricBodyGetterMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMetricBodyGetter)(nil).Get), ctx, id)
}
